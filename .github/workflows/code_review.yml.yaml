name: Automated Ollama Code Review

on:
  pull_request:
    branches:
      - main

jobs:
  ollama_review:
    runs-on: self-hosted
    name: Ollama Code Review Job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get modified files
        id: get-modified-files
        uses: tj-actions/changed-files@v43
        with:
          files: |
            **.swift
            **.kt
            **.java

      - name: Delete existing review comments
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          # List all review comments for the pull request
          comments=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments --jq '.[].id')

          # Delete each review comment
          for comment_id in $comments; do
            echo "Deleting comment ID: $comment_id"
            gh api -X DELETE repos/${{ github.repository }}/pulls/comments/${comment_id}
          done
        shell: bash

      - name: Add review comments
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          for file in ${{ steps.get-modified-files.outputs.all_changed_files }}; do
            # Read the file content
            content=$(git diff origin/main -- "$file" || echo "Failed to get diff for $file")
            
            # Escape special characters in content
            content=$(echo "$content" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g')
            content=$(echo "$content" | tr '\n' ' ')
            
            # Generate the review
            review=$(curl -s http://127.0.0.1:11434/api/generate \
                -d '{"model": "llama3.2", "prompt": "As a software engineer, please review the following code, provide suggestions for improvement, coding best practices, improve readability, maintainability, and as briefly as possible.:\n\n```\n'"${content}"'\n```", "stream": false}' \
                | jq -r '.response')
            
            # Prepare review comment
            if [[ $review == "null" ]]; then
                comment="Ollama Code Review for \`$file\`: All good!"
            else
                comment="Ollama Code Review for \`$file\`:\n\n$review"
                comment=$(echo -e "$comment")
            fi

            # Post the review comment to GitHub
            gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments \
              -f body="$comment" \
              -f path="$file" \
              -f position=1
          done
        shell: bash
