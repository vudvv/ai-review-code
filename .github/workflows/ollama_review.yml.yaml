name: Automated Ollama Code Review

on:
  pull_request:
    branches:
      - main

jobs:
  ollama_review:
    runs-on: self-hosted
    name: Ollama Code Review Job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get modified files
        id: get-modified-files
        uses: tj-actions/changed-files@v43

      - name: Review modified files
        env:
          GITHUB_TOKEN: ${{ secrets.Token }}
        run: |
          # curl -s http://127.0.0.1:11434/api/generate -d '{"model": "llama3.2", "prompt": "Review the following file:let a = 0", "stream": false}' | python3 -c "import sys, json; print(json.load(sys.stdin)['response'])"
          # modified_file_review=$(curl -s http://127.0.0.1:11434/api/generate -d '{"model": "llama3.2", "prompt": "Review the following file:let a = 0", "stream": false}' | python3 -c "import sys, json; print(json.load(sys.stdin)['response'])")
          # file_comment="Ollama Code Review for \`$file\`:\n\n$modified_file_review"
          # echo "$file_comment" >> ollama_review.txt
          # Ensure the changed files list is available

          # test 1
          # for file in ${{ steps.get-modified-files.outputs.all_changed_files }}; do
          # modified_file_review=$(curl -s http://127.0.0.1:11434/api/generate -d '{"model": "llama3.2", "prompt": "Review this code, provide suggestions for improvement, coding best practices, improve readability, and maintainability. Remove any code smells and anti-patterns. Provide code examples for your suggestion.:\n\n```\n$(cat $file)\n```", "stream": false}' | python3 -c "import sys, json; print(json.load(sys.stdin)['response'])")
          # file_comment="Ollama Code Review for \`$file\`:\n\n$modified_file_review"
          # echo "$file_comment" >> ollama_review.txt
          # done

          # # Post review comments to the pull request
          # if [ -s ollama_review.txt ]; then
          #   gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ollama_review.txt)"
          # fi

          # test 2
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo $file
          content=$(cat "$file")
          content=${content//\'/\'\'}
          content=${content//\"/\\\"}
          content=$(echo "$content" | tr '\n' ' ')
          echo $content
          review=$(curl -s http://127.0.0.1:11434/api/generate -d '{"model": "llama3.2", "prompt": "As a software engineer, please review the following code, provide suggestions for improvement, coding best practices, improve readability, and maintainability.:\n\n```\n'"${content}"'\n```", "stream": false}' | jq -r '.response')
          echo $review

          if [[ $review == "null" ]]
          then
            comments="Ollama Code Review for \`$file\`: All good!"
          else
            comments="Ollama Code Review for \`$file\`:\n\n$review"
          fi

          gh pr comment ${{ github.event.pull_request.number }} --body "${comments}"
          done
        shell: bash
